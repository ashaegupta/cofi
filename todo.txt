cofi.py notes
=============

## ADDING A PLACE 
- disable button
- change loading text 
- send back to map
- clean up local storage data // is this only for one session
- if place already exists -- return message, "exists already."

## REVIEWING A PLACE
1. Add button to place name
2. Create place page with 3 inputs
    - wifi, plugs, exp options
    - "Review Place" button
3. Be able to review a place that may already be added
4. Edit server response to have success
5. Return user to the map page

## CACHING DATA
-

## GETTING PLACES
- database first
- add in yelp review
- add in fs tip

## Nice to have
- images for experience
- show address with place name in fs_list
- add comments
- css on the review page
- css on the add place page
- disable turning (put everything in document.ready file)
- when creating a mongo update doc across multiple methods, make sure you don't overwrite keys created in one method in another, e.g. '$set' in Place.add_place
- use docstrings for each method instead of comments above
- raise exceptions instead of returning an error dictionary. use try/except clauses to catch exceptions and process them into json for returning
- import necessary functions from MongoMixin; get rid of class structure in Place


###### Different paths:
- place is added from fs/GEt
--> check to see if fs_id exists in db
--> else check if phone number exists and street address is the same
--> else add as new place in the db

- place is reviewed from cofi/GET
---> if has a place_id: in database
---> else will have yelp_id
            --> check to see if has fs_id, and it exists in db
            --> else check if phone number exists in db and street address is the same
            --> else add as new place in the db
            
a b c e not f
places that aren't in either set